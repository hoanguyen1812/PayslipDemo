// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PayslipDemo.Models;

namespace PayslipDemo.Migrations
{
    [DbContext(typeof(PayslipDbContext))]
    [Migration("20190605042052_InitialModel")]
    partial class InitialModel
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.11-servicing-32099")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("PayslipDemo.Models.Payslip", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ChequeNumber");

                    b.Property<int>("EmployeeContribution");

                    b.Property<int>("EmployerContribution");

                    b.Property<int>("ModeOfPayment");

                    b.Property<int>("PayNet");

                    b.Property<DateTime>("PaymentDate");

                    b.Property<DateTime>("PaymentPeriodEndDate");

                    b.Property<DateTime>("PaymentPeriodStartDate");

                    b.Property<int>("PayslipTypeId");

                    b.Property<int>("Status");

                    b.Property<int>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("PayslipTypeId");

                    b.ToTable("Payslips");
                });

            modelBuilder.Entity("PayslipDemo.Models.PayslipType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("PayslipTypeName");

                    b.HasKey("Id");

                    b.ToTable("PayslipTypes");
                });

            modelBuilder.Entity("PayslipDemo.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email");

                    b.Property<string>("Name");

                    b.Property<int>("UserRoleTypeId");

                    b.HasKey("Id");

                    b.HasIndex("UserRoleTypeId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("PayslipDemo.Models.UserRoleType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("UserRoleTypeName");

                    b.HasKey("Id");

                    b.ToTable("UserRoleTypes");
                });

            modelBuilder.Entity("PayslipDemo.Models.Payslip", b =>
                {
                    b.HasOne("PayslipDemo.Models.PayslipType", "PayslipType")
                        .WithMany()
                        .HasForeignKey("PayslipTypeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("PayslipDemo.Models.User", b =>
                {
                    b.HasOne("PayslipDemo.Models.UserRoleType", "UserRoleType")
                        .WithMany()
                        .HasForeignKey("UserRoleTypeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
